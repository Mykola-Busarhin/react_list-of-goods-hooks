{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setSortType","visibleGoods","goods","sort","itemOne","itemTwo","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","classNames","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA/BD,SACLC,EACAH,EACAH,GAEA,IAAMK,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAASC,GAC1B,OAAQN,GACN,KAAKP,EAASc,SACZ,OAAOF,EAAQG,cAAcF,GAE/B,KAAKb,EAASgB,OACZ,OAAOJ,EAAQK,OAASJ,EAAQI,OAElC,QACE,OAAOjB,EAASM,SAIlBF,GACFK,EAAaS,UAGRT,EAOcU,CAAkBlB,EAAiBM,EAAUH,GAElE,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMd,EAAYR,EAASc,WACpCM,UAAWG,IAAW,iBACpB,CAAE,WAAYhB,IAAaP,EAASc,WAJxC,iCASA,wBACEO,KAAK,SACLC,QAAS,kBAAMd,EAAYR,EAASgB,SACpCI,UAAWG,IAAW,oBACpB,CAAE,WAAYhB,IAAaP,EAASgB,SAJxC,4BASA,wBACEK,KAAK,SACLC,QAAS,kBAAMjB,GAAaD,IAC5BgB,UAAWG,IAAW,oBACpB,CAAE,YAAanB,IAJnB,sBASEG,IAAaP,EAASM,MAAQF,IAC9B,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPjB,GAAY,GACZG,EAAYR,EAASM,OALzB,sBAaJ,6BACE,6BACGG,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACIA,GADoBA,cCrGpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.012e12b4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((itemOne, itemTwo) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return itemOne.localeCompare(itemTwo);\n\n      case SortType.LENGTH:\n        return itemOne.length - itemTwo.length;\n\n      default:\n        return SortType.NONE;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.ALPHABET)}\n          className={classNames('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.LENGTH)}\n          className={classNames('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setReversed(!isReversed)}\n          className={classNames('button is-warning',\n            { 'is-light': !isReversed })}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setReversed(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(item => (\n            <li data-cy=\"Good\" key={item}>\n              { item }\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}